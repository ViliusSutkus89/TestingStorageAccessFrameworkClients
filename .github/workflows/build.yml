#  Copyright (c) 2022 ViliusSutkus89.com
#  https://www.viliussutkus89.com/posts/instrumented-testing-storage-access-framework-saf-client-applications/
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in all
#  copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#  SOFTWARE.

name: build
on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '**.md'
      - '.github/**'
      - '!.github/workflows/build.yml'

permissions:
  actions: none
  checks: none
  contents: none
  deployments: none
  issues: none
  packages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

jobs:
  buildApplication:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11
      - uses: android-actions/setup-android@v2

      - name: Build and lint application
        run: ./gradlew build lintRelease

      - uses: actions/upload-artifact@v2
        with:
          name: APKs
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - uses: actions/upload-artifact@v2
        with:
          name: lint-results-release.html
          path: app/build/reports/lint-results-release.html
          if-no-files-found: error

  testApplication:
    runs-on: macos-11
    strategy:
      fail-fast: false
      matrix:
        include:
          # Oldest "reasonable" API level
          - arch: x86
            api-level: 16
            api-type-target: default
          # KitKat introduces functionality used in this app
          - arch: x86
            api-level: 19
            api-type-target: default
          # Oldest x86_64 image
          - arch: x86_64
            api-level: 21
            api-type-target: default
          # Latest x86 image
          - arch: x86
            api-level: 30
            api-type-target: google_apis
          # API-31, to debug a specific issue
          - arch: x86_64
            api-level: 31
            api-type-target: google_apis
          # Latest image
          - arch: x86_64
            api-level: 32
            api-type-target: google_apis
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11
      - uses: android-actions/setup-android@v2

      # PreBuild project, to know how long is the build and how long are the tests
      - name: Build
        run: ./gradlew assembleDebug

      - name: Android Virtual Device (AVD) cache
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{ matrix.arch }}-${{ matrix.api-type-target }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          target: ${{ matrix.api-type-target }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          target: ${{ matrix.api-type-target }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
          disable-animations: true

          # This script might look a bit ugly, but it is necessary.
          # Let us go over the "questionable" parts.

          # logcat is needed to save raw device logs. Run in background, to keep saving while testing.

          # ./gradlew connectedCheck" might fail, but we still need to screenshot the device after it.
          # "set +e" is there to make bash NOT exit on error.
          # Save returned exit code from connectedCheck, do the screenshot and then return the original exit code.
          script: |
            mkdir testResults
            adb logcat > testResults/logcat.txt &

            set +e
            ./gradlew connectedCheck
            connectedCheckRetVal=$?

            mv app/build/reports/androidTests/connected testResults/

            adb shell screencap /data/local/tmp/screen.png
            adb pull /data/local/tmp/screen.png testResults/

            exit $connectedCheckRetVal

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: testResults-${{ matrix.api-level }}-${{ matrix.arch }}-${{ matrix.api-type-target }}
          path: testResults
          if-no-files-found: error
